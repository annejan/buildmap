# Postgres db connection
postgres_connstring = "dbname='buildmap' user='vagrant'"

# Name of your tilecache_seed binary. If you use tilecache from the .deb,
# this is without the .py
tilecache_seed_binary = 'sudo tilecache_seed'

# A list of source files. The key is the table name to use in Postgres.
source_files = {'site_plan': '../gis-2016/site-plan.dxf'}

# A directory containing .mss files, one per destination layer.
styles = '../gis-2016/mss'

# Location of the webroot directory where layers.js and tiles will be placed
output_directory = '/home/vagrant/map.emfcamp.org'

# Location of the tile root. If you have multiple CNAMEs for your tile host,
# you can list them here to speed up loading.
urls = ['http://localhost:8000/tiles']

# Number of tilecache threads to run
threads = 3

# Projection of your CAD files (this will usually be a national mercator projection -
# 27700 is OSGB38 for the UK)
source_projection = 27700

# Projection of the output tiles. 3857 is "web mercator" and allows you to use
# OpenStreetMap as a base map.
dest_projection = 3857

# Extents of the map (in dest_projection)
extents = (-68900, 6657782, -65924, 6660310)

# Resolutions to generate. This should be a subset of your basemap resolutions,
# perhaps with one or two more detailed resolutions.
#
# These resolutions are a subset of OSM's resolutions, with 0.25 added:
resolutions = [9.554628534317017, 4.777314267158508, 2.388657133579254, 1.194328566789627,
               0.5971642833948135, 0.25]
